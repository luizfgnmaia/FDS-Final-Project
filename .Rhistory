shiny::runApp()
shiny::runApp()
runApp()
runApp()
library(stringr)
library(dplyr)
files = list.files("data")
partidas = files %>%
lapply(function(x) read.csv(paste0("data/", x), stringsAsFactors = FALSE, encoding = "UTF-8") %>%
mutate(file = str_sub(x, start = 1, end = -5))) %>%
do.call(rbind, .) %>%
rowwise() %>%
mutate(date = arruma_data(date)) %>%
filter(date >= "2002-01-01") %>%
arrange(date) %>%
mutate(result = if_else(goals_1 > goals_2, 1,
if_else(goals_1 == goals_2, 0.5, 0)))
library(stringr)
library(dplyr)
arruma_data <- function(x) {
if(nchar(x) == 15) {
ano1 = str_sub(x, start = 7, end = 10)
ano2 = str_sub(x, start = 12, end = 15)
if(as.integer(str_sub(x, start = 4, end = 5)) >= 7) {
x = (paste0(str_sub(x, start = 1, end = 6), ano1))
} else {
x = (paste0(str_sub(x, start = 1, end = 6), ano2))
}
}
as.Date(x, "%d.%m.%Y")
}
files = list.files("data")
partidas = files %>%
lapply(function(x) read.csv(paste0("data/", x), stringsAsFactors = FALSE, encoding = "UTF-8") %>%
mutate(file = str_sub(x, start = 1, end = -5))) %>%
do.call(rbind, .) %>%
rowwise() %>%
mutate(date = arruma_data(date)) %>%
filter(date >= "2002-01-01") %>%
arrange(date) %>%
mutate(result = if_else(goals_1 > goals_2, 1,
if_else(goals_1 == goals_2, 0.5, 0)))
clubes_paises = tibble(Clube = c(partidas$club_1, partidas$club_2),
Pais = c(partidas$file, partidas$file)) %>%
distinct(Clube, Pais) %>%
filter(Pais != "Continentais")
clubes_paises
clubes_paises = tibble(Clube = c(partidas$club_1, partidas$club_2),
Pais = c(partidas$file, partidas$file)) %>%
distinct(Clube, Pais) %>%
filter(Pais != "Continentais") %>%
arrange(Clube, Pais)
View(clubes_paises)
clubes_continentais = tibble(Clube = c(partidas$club_1, partidas$club_2),
Pais = c(partidas$file, partidas$file)) %>%
distinct(Clube, Pais) %>%
filter(Pais == "Continentais") %>%
arrange(Clube)
clubes_continentais
setdiff(clubes_continentais$Clube, clubes_paises$Clube)
library(stringr)
library(dplyr)
arruma_data <- function(x) {
if(nchar(x) == 15) {
ano1 = str_sub(x, start = 7, end = 10)
ano2 = str_sub(x, start = 12, end = 15)
if(as.integer(str_sub(x, start = 4, end = 5)) >= 7) {
x = (paste0(str_sub(x, start = 1, end = 6), ano1))
} else {
x = (paste0(str_sub(x, start = 1, end = 6), ano2))
}
}
as.Date(x, "%d.%m.%Y")
}
files = list.files("data")
partidas = files %>%
lapply(function(x) read.csv(paste0("data/", x), stringsAsFactors = FALSE, encoding = "UTF-8") %>%
mutate(file = str_sub(x, start = 1, end = -5))) %>%
do.call(rbind, .) %>%
rowwise() %>%
mutate(date = arruma_data(date)) %>%
filter(date >= "2002-01-01") %>%
arrange(date) %>%
mutate(result = if_else(goals_1 > goals_2, 1,
if_else(goals_1 == goals_2, 0.5, 0)))
clubes_paises = tibble(Clube = c(partidas$club_1, partidas$club_2),
Pais = c(partidas$file, partidas$file)) %>%
distinct(Clube, Pais) %>%
filter(Pais != "Continentais") %>%
arrange(Clube, Pais)
clubes_continentais = tibble(Clube = c(partidas$club_1, partidas$club_2),
Pais = c(partidas$file, partidas$file)) %>%
distinct(Clube, Pais) %>%
filter(Pais == "Continentais") %>%
arrange(Clube)
setdiff(clubes_continentais$Clube, clubes_paises$Clube)
clubes_paises %>%
count(Clube) %>%
arrange(desc(n))
View(clubes_paises)
write.table(clubes_paises, file = "clubes_paises.csv", sep = ";", na = "", row.names = FALSE)
library(stringr)
library(dplyr)
arruma_data <- function(x) {
if(nchar(x) == 15) {
ano1 = str_sub(x, start = 7, end = 10)
ano2 = str_sub(x, start = 12, end = 15)
if(as.integer(str_sub(x, start = 4, end = 5)) >= 7) {
x = (paste0(str_sub(x, start = 1, end = 6), ano1))
} else {
x = (paste0(str_sub(x, start = 1, end = 6), ano2))
}
}
as.Date(x, "%d.%m.%Y")
}
files = list.files("data")
partidas = files %>%
lapply(function(x) read.csv(paste0("data/", x), stringsAsFactors = FALSE, encoding = "UTF-8") %>%
mutate(file = str_sub(x, start = 1, end = -5))) %>%
do.call(rbind, .) %>%
rowwise() %>%
mutate(date = arruma_data(date)) %>%
filter(date >= "2002-01-01") %>%
arrange(date) %>%
mutate(result = if_else(goals_1 > goals_2, 1,
if_else(goals_1 == goals_2, 0.5, 0)))
clubes_paises = tibble(Clube = c(partidas$club_1, partidas$club_2),
Pais = c(partidas$file, partidas$file)) %>%
distinct(Clube, Pais) %>%
filter(Pais != "Continentais") %>%
arrange(Clube, Pais)
clubes_continentais = tibble(Clube = c(partidas$club_1, partidas$club_2),
Pais = c(partidas$file, partidas$file)) %>%
distinct(Clube, Pais) %>%
filter(Pais == "Continentais") %>%
arrange(Clube)
setdiff(clubes_continentais$Clube, clubes_paises$Clube)
clubes_paises %>%
count(Clube) %>%
arrange(desc(n))
write.table(clubes_paises, file = "clubes_paises.csv", sep = ";", na = "", row.names = FALSE)
clubes_paises %>% filter(Clube == "Fortaleza") %>% View()
files = list.files("data")
partidas = files %>%
lapply(function(x) read.csv(paste0("data/", x), stringsAsFactors = FALSE, encoding = "UTF-8") %>%
mutate(file = str_sub(x, start = 1, end = -5))) %>%
do.call(rbind, .) %>%
rowwise() %>%
mutate(date = arruma_data(date)) %>%
filter(date >= "2002-01-01") %>%
arrange(date) %>%
mutate(result = if_else(goals_1 > goals_2, 1,
if_else(goals_1 == goals_2, 0.5, 0)))
library(stringr)
library(dplyr)
arruma_data <- function(x) {
if(nchar(x) == 15) {
ano1 = str_sub(x, start = 7, end = 10)
ano2 = str_sub(x, start = 12, end = 15)
if(as.integer(str_sub(x, start = 4, end = 5)) >= 7) {
x = (paste0(str_sub(x, start = 1, end = 6), ano1))
} else {
x = (paste0(str_sub(x, start = 1, end = 6), ano2))
}
}
as.Date(x, "%d.%m.%Y")
}
files = list.files("data")
partidas = files %>%
lapply(function(x) read.csv(paste0("data/", x), stringsAsFactors = FALSE, encoding = "UTF-8") %>%
mutate(file = str_sub(x, start = 1, end = -5))) %>%
do.call(rbind, .) %>%
rowwise() %>%
mutate(date = arruma_data(date)) %>%
filter(date >= "2002-01-01") %>%
arrange(date) %>%
mutate(result = if_else(goals_1 > goals_2, 1,
if_else(goals_1 == goals_2, 0.5, 0)))
View(partidas)
source("dependencies.R") # https://github.com/rstudio/shinydashboard/issues/190
source("aux_shiny.R")
load("pre_shiny.RData")
melhores_clubes
?top_n
library(dplyr)
load("dados.RData")
clubes = dados %>%
filter(Data == max(dados$Data)) %>%
arrange(desc(Elo)) %>%
.$Clube
paises = sort(unique(dados$Pais))
datas = sort(unique(dados$Data))
len_datas = length(datas)
# Times com maiores elos na história
melhores_clubes = dados %>%
mutate(Ano = format(Data, "%Y")) %>%
group_by(Clube, Ano) %>%
summarise(Elo = max(Elo)) %>%
head(50) %>%
arrange(desc(Elo))
# Time com mais tempo na primeira posição do ranking
maior_por_mes = dados %>%
group_by(Data) %>%
slice(which.max(Elo)) %>%
ungroup() %>%
mutate(Data = as.character(Data))
clube = maior_por_mes$Clube[1]
pais = maior_por_mes$Pais[1]
de = maior_por_mes$Data[1]
ate = NULL
meses = NULL
j = 1
m = 1
for(i in 2:nrow(maior_por_mes)) {
if(!(clube[j] == maior_por_mes$Clube[i] & pais[j] == maior_por_mes$Pais[i])) {
meses[j] = m
ate[j] = maior_por_mes$Data[i-1]
j = j + 1
m = 1
clube[j] = maior_por_mes$Clube[i]
pais[j] = maior_por_mes$Pais[i]
de[j] = maior_por_mes$Data[i]
} else {
m = m + 1
}
}
ate = c(ate, "")
meses = c(meses, NA)
maiores_streaks = tibble(Clube = clube, Pais = pais, De = de, Ate = ate, Meses = meses) %>%
mutate(De = format(as.Date(De), "%b %Y"),
Ate = format(as.Date(Ate), "%b %Y")) %>%
arrange(desc(Meses))
rm(list = setdiff(ls(), c("dados", "clubes", "paises", "datas", "len_datas", "melhores_clubes", "maiores_streaks")))
save.image("pre_shiny.RData")
melhores_clubes
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
runApp()
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
runApp()
source(aux_shiny.R)
flags_df
library(dplyr)
source(aux_shiny.R)
load("dados.RData")
clubes = dados %>%
filter(Data == max(dados$Data)) %>%
arrange(desc(Elo)) %>%
.$Clube
paises = sort(unique(dados$Pais))
datas = sort(unique(dados$Data))
len_datas = length(datas)
# Times com maiores elos na história
melhores_clubes = dados %>%
mutate(Ano = format(Data, "%Y")) %>%
group_by(Clube, Pais, Ano) %>%
summarise(Elo = max(Elo)) %>%
arrange(desc(Elo)) %>%
head(50) %>%
inner_join(flags_df) %>%
mutate(Clube = paste(flag, Clube)) %>%
select(-Pais, -flag)
# Time com mais tempo na primeira posição do ranking
maior_por_mes = dados %>%
group_by(Data) %>%
slice(which.max(Elo)) %>%
ungroup() %>%
mutate(Data = as.character(Data))
clube = maior_por_mes$Clube[1]
pais = maior_por_mes$Pais[1]
de = maior_por_mes$Data[1]
ate = NULL
meses = NULL
j = 1
m = 1
for(i in 2:nrow(maior_por_mes)) {
if(!(clube[j] == maior_por_mes$Clube[i] & pais[j] == maior_por_mes$Pais[i])) {
meses[j] = m
ate[j] = maior_por_mes$Data[i-1]
j = j + 1
m = 1
clube[j] = maior_por_mes$Clube[i]
pais[j] = maior_por_mes$Pais[i]
de[j] = maior_por_mes$Data[i]
} else {
m = m + 1
}
}
ate = c(ate, "")
meses = c(meses, NA)
maiores_streaks = tibble(Clube = clube, Pais = pais, De = de, Ate = ate, Meses = meses) %>%
mutate(De = format(as.Date(De), "%b %Y"),
Ate = format(as.Date(Ate), "%b %Y")) %>%
arrange(desc(Meses))
rm(list = setdiff(ls(), c("dados", "clubes", "paises", "datas", "len_datas", "melhores_clubes", "maiores_streaks")))
save.image("pre_shiny.RData")
View(melhores_clubes)
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
View(melhores_clubes)
runApp()
maiores_streaks
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
runApp()
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
runApp()
runApp()
runApp()
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
?renderTable
runApp()
source('~/GitHub/FDS-Final-Project/pre_shiny.R', encoding = 'UTF-8', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(melhores_clubes)
source("dependencies.R") # https://github.com/rstudio/shinydashboard/issues/190
source("aux_shiny.R")
load("pre_shiny.RData")
View(melhores_clubes)
melhores_clubes = dados %>%
mutate(Ano = format(Data, "%Y")) %>%
group_by(Clube, Pais, Ano) %>%
summarise(Elo = max(Elo)) %>%
ungroup() %>%
arrange(desc(Elo)) %>%
head(50)
melhores_clubes = dados %>%
mutate(Ano = format(Data, "%Y")) %>%
group_by(Clube, Pais, Ano) %>%
summarise(Elo = max(Elo)) %>%
ungroup() %>%
arrange(desc(Elo)) %>%
head(50) %>%
inner_join(flags_df)
melhores_clubes = dados %>%
mutate(Ano = format(Data, "%Y")) %>%
group_by(Clube, Pais, Ano) %>%
summarise(Elo = max(Elo)) %>%
ungroup() %>%
arrange(desc(Elo))
melhores_clubes = dados %>%
mutate(Ano = format(Data, "%Y")) %>%
group_by(Clube, Pais, Ano) %>%
summarise(Elo = max(Elo)) %>%
ungroup() %>%
arrange(desc(Elo)) %>%
head(50)
a=melhores_clubes
View(a)
melhores_clubes = dados %>%
mutate(Ano = format(Data, "%Y")) %>%
group_by(Clube, Pais, Ano) %>%
summarise(Elo = max(Elo)) %>%
ungroup() %>%
arrange(desc(Elo)) %>%
head(50) %>%
inner_join(flags_df)
library(dplyr)
source("aux_shiny.R")
load("dados.RData")
flags_df = tibble(Pais = c("Argentina", "Bolívia", "Brasil", "Chile", "Colômbia", "Equador",
"Paraguai", "Peru", "Uruguai", "Venezuela"),
flag = c('<img src="https://flagpedia.net/data/flags/mini/ar.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/bo.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/br.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/cl.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/co.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/ec.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/py.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/pe.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/uy.png" width="29" height="20" /></a>',
'<img src="https://flagpedia.net/data/flags/mini/ve.png" width="29" height="20" /></a>'))
clubes = dados %>%
filter(Data == max(dados$Data)) %>%
arrange(desc(Elo)) %>%
.$Clube
paises = sort(unique(dados$Pais))
datas = sort(unique(dados$Data))
len_datas = length(datas)
# Times com maiores elos na história
melhores_clubes = dados %>%
mutate(Ano = format(Data, "%Y")) %>%
group_by(Clube, Pais, Ano) %>%
summarise(Elo = max(Elo)) %>%
ungroup() %>%
arrange(desc(Elo)) %>%
head(50) %>%
inner_join(flags_df) %>%
mutate(Clube = paste(flag, Clube)) %>%
select(-Pais, -flag)
# Time com mais tempo na primeira posição do ranking
maior_por_mes = dados %>%
group_by(Data) %>%
slice(which.max(Elo)) %>%
ungroup() %>%
mutate(Data = as.character(Data))
clube = maior_por_mes$Clube[1]
pais = maior_por_mes$Pais[1]
de = maior_por_mes$Data[1]
ate = NULL
meses = NULL
j = 1
m = 1
for(i in 2:nrow(maior_por_mes)) {
if(!(clube[j] == maior_por_mes$Clube[i] & pais[j] == maior_por_mes$Pais[i])) {
meses[j] = m
ate[j] = maior_por_mes$Data[i-1]
j = j + 1
m = 1
clube[j] = maior_por_mes$Clube[i]
pais[j] = maior_por_mes$Pais[i]
de[j] = maior_por_mes$Data[i]
} else {
m = m + 1
}
}
ate = c(ate, NA)
meses = c(meses, m)
maiores_streaks = tibble(Clube = clube, Pais = pais, De = de, Ate = ate, Meses = meses) %>%
mutate(De = format(as.Date(De), "%b %Y"),
Ate = format(as.Date(Ate), "%b %Y")) %>%
arrange(desc(Meses)) %>%
inner_join(flags_df) %>%
mutate(Clube = paste(flag, Clube),
Meses = as.integer(Meses)) %>%
select(-Pais, -flag)
rm(list = setdiff(ls(), c("dados", "clubes", "paises", "datas", "len_datas", "melhores_clubes", "maiores_streaks")))
save.image("pre_shiny.RData")
View(melhores_clubes)
runApp()
